name: Deploy Backend to AWS Lambda

on:
  push:
    branches:
      - master
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1
  LAMBDA_FUNCTION_NAME: demo-collection-backend-api

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: |
          cd backend
          dotnet restore

      - name: Build
        run: |
          cd backend
          dotnet build --configuration Release --no-restore

      - name: Run Tests
        run: |
          cd backend.Tests
          dotnet test --no-restore --verbosity normal

      - name: Publish
        run: |
          cd backend
          dotnet publish --configuration Release --output ./publish --no-build

      - name: Create deployment package
        run: |
          cd backend/publish
          zip -r ../deployment-package.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://backend/deployment-package.zip \
            --region ${{ env.AWS_REGION }}
          
          echo "Code deployed successfully!"

      - name: Wait for deployment to complete
        run: |
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --region ${{ env.AWS_REGION }}
          
          echo "Lambda function updated and ready!"

      - name: Get Function URL
        id: function_url
        run: |
          FUNCTION_URL=$(aws lambda get-function-url-config \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --query 'FunctionUrl' \
            --output text 2>/dev/null || echo "No Function URL configured")
          echo "url=$FUNCTION_URL" >> $GITHUB_OUTPUT

      - name: Create Deployment Summary
        run: |
          echo "## Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Parameter | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Function Name | \`${{ env.LAMBDA_FUNCTION_NAME }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Region | \`${{ env.AWS_REGION }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Commit | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Deployed By | @${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.function_url.outputs.url }}" != "No Function URL configured" ]; then
            echo "### Function URL" >> $GITHUB_STEP_SUMMARY
            echo "\`${{ steps.function_url.outputs.url }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Test your API:" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "curl ${{ steps.function_url.outputs.url }}swagger" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### View Logs" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "aws logs tail /aws/lambda/${{ env.LAMBDA_FUNCTION_NAME }} --follow --region ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
